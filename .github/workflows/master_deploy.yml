name: "master_deploy"

on:
  push:
    branches: [ master ]
    tags: [ v* ]

env:
  PROJECT: "giphy-anywhere.xcodeproj"
  SCHEME: "GIPHY Anywhere"

jobs:
  master_deploy:
    runs-on: "macos-latest"
    steps:
      - name: "Checkout project"
        uses: actions/checkout@v2
      - name: "Set environment variables from project settings"
        run: |
          function set-env-from-proj { 
            echo "::set-env name=$1::$(xcodebuild -project "$PROJECT" -scheme "$SCHEME" -showBuildSettings | grep " $1 " | sed "s/[ ]*$1 = //")"
          }
          set-env-from-proj FULL_PRODUCT_NAME
          set-env-from-proj INSTALL_PATH
          set-env-from-proj PRODUCT_BUNDLE_IDENTIFIER
          set-env-from-proj PRODUCT_MODULE_NAME
          set-env-from-proj PRODUCT_NAME
          set-env-from-proj PROJECT_NAME
      - name: "Import signing certificate into keychain"
        run: |
          KEYCHAIN_FILE=default.keychain
          KEYCHAIN_PASSWORD=myvoiceismypassport
          security create-keychain -p $KEYCHAIN_PASSWORD $KEYCHAIN_FILE
          security default-keychain -s $KEYCHAIN_FILE
          security unlock-keychain -p $KEYCHAIN_PASSWORD $KEYCHAIN_FILE
          security import <(echo $SIGNING_CERTIFICATE_P12_DATA | base64 --decode) \
                          -f pkcs12 \
                          -k $KEYCHAIN_FILE \
                          -P $SIGNING_CERTIFICATE_PASSWORD \
                          -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k $KEYCHAIN_PASSWORD $KEYCHAIN_FILE
        env:
          SIGNING_CERTIFICATE_P12_DATA: ${{ secrets.SIGNING_CERTIFICATE_P12_DATA }}
          SIGNING_CERTIFICATE_PASSWORD: ${{ secrets.SIGNING_CERTIFICATE_PASSWORD }}
      - name: "Build project"
        run: |
          xcodebuild -project "$PROJECT" -scheme "$SCHEME" install DSTROOT=build/root | xcpretty
      - name: "Package app"
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          hdiutil create \
                  -fs HFS+ \
                  -srcfolder "build/root/$INSTALL_PATH/$FULL_PRODUCT_NAME" \
                  -volname "$PRODUCT_NAME" "build/$PRODUCT_MODULE_NAME.dmg"
      - name: "Notarize app"
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          npx notarize-cli --file "build/$PRODUCT_MODULE_NAME.dmg"
        env:
          NOTARIZE_USERNAME: ${{ secrets.NOTARIZE_USERNAME }}
          NOTARIZE_PASSWORD: ${{ secrets.NOTARIZE_PASSWORD }}
      - name: "Release app"
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          files: build/${{ env.PRODUCT_MODULE_NAME }}.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


